#pragma once

namespace libhoard {


template<typename... Args, typename Alloc>
inline thread_safe_policy::table_base_impl::table_base_impl([[maybe_unused]] const std::tuple<Args...>& args, [[maybe_unused]] const Alloc& alloc)
{}

inline auto thread_safe_policy::table_base_impl::lock() -> void {
  return mtx_.lock();
}

inline auto thread_safe_policy::table_base_impl::try_lock() -> bool {
  return mtx_.try_lock();
}

inline auto thread_safe_policy::table_base_impl::unlock() -> void {
  return mtx_.unlock();
}


} /* namespace libhoard */
